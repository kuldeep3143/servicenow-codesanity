<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_codesanity.BeanCounter</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Counts the total amount of checks performed during a scan, per check, per check and table, per table and per table and check.</description>
        <name>BeanCounter</name>
        <script><![CDATA[function BeanCounter(grCheck,grRecord)
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var IsObject = x_snc_devtools.IsObject;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	var SetValue = x_snc_devtools.SetValue;
	var GetValue = x_snc_devtools.GetValue;
	var RenderRecordSummary = x_snc_devtools.RenderRecordSummary;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetAppRecord = x_snc_devtools.GetAppRecord;

	if (IsValidRecord(grCheck) == false)
	{
		return false;
	}
	if (IsValidRecord(grRecord) == false)
	{
		return false;
	}
	
	var transactionCache = new x_snc_devtools.TransactionCacheAPI('CODESANITY');
	
	var beancount = transactionCache.GetItem('beancount');
	if (IsObject(beancount) == false)
	{
		beancount = {};
	}
	
	var strAppName = GetStringValue(GetValue(beancount,'app'));
	if (strAppName == '')
	{
		var grApp = GetAppRecord(GetStringValue(grRecord.sys_scope));
		if (IsValidRecord(grApp) == true)
		{
			beancount = SetValue(GetStringValue(grApp.name),beancount,'app');
		}
	}
	
	var nTotal = GetIntegerValue(GetValue(beancount,'total'));
	nTotal = nTotal + 1;
	beancount = SetValue(nTotal,beancount,'total');
	
	var nCheckTotal = GetValue(beancount,'checks',GetStringValue(grCheck.name),'total');
	beancount = SetValue(nCheckTotal+1,beancount,'checks',GetStringValue(grCheck.name),'total');

	var nTablesTotal = GetValue(beancount,'tables',GetStringValue(grRecord.getRecordClassName()),'total');
	beancount = SetValue(nTablesTotal+1,beancount,'tables',GetStringValue(grRecord.getRecordClassName()),'total');
	
	
	/*
	var nRecordsTotal = GetValue(beancount,'records',RenderRecordSummary(grRecord),'total');
	beancount = SetValue(nRecordTotal+1,beancount,'records',RenderRecordSummary(grRecord),'total');
	*/
		
	transactionCache.SetItem('beancount',beancount);

	var nFrequency = GetIntegerValue(AppGetProperty('log.beancount.frequency'));
	if (nFrequency > 0)
	{
		if ((nTotal % nFrequency) == 0)
		{
			LogBeanCount();
		}
	}
	
	
	return nTotal;

}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-17 14:33:06</sys_created_on>
        <sys_id>79515d84dbe8e1106a03dad1f3961901</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>BeanCounter</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>sys_script_include_79515d84dbe8e1106a03dad1f3961901</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-26 19:23:44</sys_updated_on>
    </sys_script_include>
</record_update>

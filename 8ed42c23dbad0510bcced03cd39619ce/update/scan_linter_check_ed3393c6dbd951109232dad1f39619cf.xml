<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>code_sanity</category>
        <description>Flow Designer Flows and Subflows are designed to allow low-code/no-code citizen developers to assemble low complexity, ad-hoc logic for their apps.&#13;
Flow Designer is NOT suitable to built high-complex applications.&#13;
It is perfectly fine to use scripted action steps in a Flow or Subflow to let low-code/no-code developers access features that are implemented in script includes. However if there is the perceived need to run a Flow or Subflow from within another script, this is a strong indicator of a substantial architectural design flaw. Why should a pro-coder call a low-code/no-code API? If that is the case, important aspects of an application's business logic has been implemented in Flows or Subflows instead of Script Includes - or worse it is randomly distributed between Script Includes and Flows.</description>
        <documentation_url/>
        <finding_type>scan_finding</finding_type>
        <name>CodeSanity - Do not run Flows from scripts</name>
        <priority>1</priority>
        <resolution_details>Refactor the Flows to make use of functions implemented in Script Includes - not vice versa.&#13;
Turn the complex Flows, Subflows and Flow Actions that actually contain substantial parts of the business logic into Script Includes.&#13;
Expose features using Flows and Subflows to low-code/no-code developers where needed.  </resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {
	
	if (x_snc_codesanity.IsCheckApplicableToRecord())
	{	
		var GetStringValue = x_snc_devtools.GetStringValue;
		var ScriptEmptyStringLiterals = x_snc_devtools.ScriptEmptyStringLiterals;

		var strSource = GetStringValue(engine.rootNode.toSource());
		
		strSource = ScriptEmptyStringLiterals(strSource);

		if (strSource.indexOf('sn_fd') != -1)
		{
			engine.finding.incrementWithNode(engine.rootNode);
		}
	}

})(engine);]]></script>
        <short_description>Scripts must not run Flows</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-15 15:49:46</sys_created_on>
        <sys_id>ed3393c6dbd951109232dad1f39619cf</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>CodeSanity - Do not run Flows from scripts</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_linter_check_ed3393c6dbd951109232dad1f39619cf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-03 10:14:45</sys_updated_on>
    </scan_linter_check>
</record_update>

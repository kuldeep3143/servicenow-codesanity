<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>code_sanity</category>
        <description>Debug output should always be temporary and should be removed as soon as the analyzed issue has been resolved. </description>
        <documentation_url/>
        <finding_type/>
        <name>CodeSanity - Debug output</name>
        <priority>1</priority>
        <resolution_details>Remove all traits of debug output from source code.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	
    if (x_snc_codesanity.IsCheckApplicableToRecord())
	{	
	
		var GetStringValue = x_snc_devtools.GetStringValue;
		var StringCheckRegEx = x_snc_devtools.StringCheckRegEx;
		var ScriptEmptyStringLiterals = x_snc_devtools.ScriptEmptyStringLiterals;

		var bException = false;

		if (GetStringValue(current.getRecordClassName()) == 'sys_script_include')
		{
			var strName = GetStringValue(current.name);
			if (strName == 'Debug')
			{
				// An App's Debug script include contains the definition of the Debug() function.
				bException = true;
			}
		}

		if (bException == false)
		{
			var strSource = GetStringValue(engine.rootNode.toSource());
			strSource = ScriptEmptyStringLiterals(strSource);

			if (StringCheckRegEx(strSource,'gs\\.debug\\s*\\(') == true)
			{
				engine.finding.increment();
			}

			engine.rootNode.visit(function(node)
			{
				var parent = node.getParent();
				if (node.getTypeName() === "NAME" &&
					node.getNameIdentifier() === "Debug" &&
					parent.getTypeName() === "CALL")
				{
					engine.finding.incrementWithNode(node);
				}
			});
		}
	}

})(engine);]]></script>
        <short_description>Do not leave debug output in scripts</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-04-27 12:57:14</sys_created_on>
        <sys_id>090e08b2db0f0510b652edb3059619bc</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>CodeSanity - Debug output</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_linter_check_090e08b2db0f0510b652edb3059619bc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-07 21:06:52</sys_updated_on>
    </scan_linter_check>
</record_update>

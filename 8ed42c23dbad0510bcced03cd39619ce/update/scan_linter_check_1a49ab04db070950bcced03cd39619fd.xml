<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>code_sanity</category>
        <description>Using application names as constant string literals is dangerous. Application names may change over time and any logic based on string comparison may break. &#13;
A few exceptions as a view name may be the same as an application name - this covers sysrule_view records and a limited number of script includes. </description>
        <documentation_url/>
        <finding_type/>
        <name>CodeSanity - Application names in code</name>
        <priority>1</priority>
        <resolution_details>Refactor the code in a way that does not require to check against the application name. One option might be to check against the scope name - as the scope name is not expected to change ever in the lifetime of an application.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	
    if (x_snc_codesanity.IsCheckApplicableToRecord())
	{	
	
		var GetStringValue = x_snc_devtools.GetStringValue;
		var StringCheckRegEx = x_snc_devtools.StringCheckRegEx;
		var GetAppName = x_snc_devtools.GetAppName;

		var strSource = GetStringValue(engine.rootNode.toSource());


		var bException = false;

		if (GetStringValue(current.getRecordClassName()) == 'sys_script_include')
		{
			var strName = GetStringValue(current.name);
			var strApiName = GetStringValue(current.api_name);
			if (strName == 'AppGetDependencies')
			{
				// Any AppGetDependencies function may contain application names - which are usually used for display only.  
				bException = true;
			}
			if (strName.indexOf('GetLinkDirectory') != -1)
			{
				// Any GetLinkDirectory function may contain application names - which are usually used for display only.  
				bException = true;
			}		
			if (strName == 'AppBuilder')
			{
				// AppBuilder may need to refer to the application name. The function is intended to be run only once
				// during the life cycle of an application and hence is unlikely to cause any runtime issues.
				bException = true;
			}	
			if (strName == 'AppInstall')
			{
				// Appinstall may need to refer to the application name. The function is intended to be run only once
				// after the installation of an application and hence is unlikely to cause any runtime issues.
				bException = true;
			}			
			if (strApiName == 'x_snc_codesanity.GetScanSuiteRecord')
			{
				// The function contains the scan suite name which is the same as the application name. 
				bException = true;
			}
		}	
		
		if (GetStringValue(current.getRecordClassName()) == 'sysrule_view')
		{
			bException = true;
		}

		if (bException == false)
		{
			var grApps = new GlideRecord('sys_app');
			grApps.query();
			while (grApps.next())
			{
				var strAppName =  GetAppName(grApps);

				var strRegExp = "[\\\"\\']"+strAppName+"[\\\"\\']";

				if (StringCheckRegEx(strSource,strRegExp,'') == true)
				{
					var strRegExp = "type:\\s?[\\\"\\']"+strAppName+"[\\\"\\']";

					if (StringCheckRegEx(strSource,strRegExp,'') == false)
					{
						var strRegExp = "getExtensions\\s?\\(\\s?[\\\"\\']"+strAppName+"[\\\"\\']\\s?\\)";
						if (StringCheckRegEx(strSource,strRegExp,'') == false)
						{
							engine.finding.incrementWithNode(engine.rootNode);
						}
					}
				}
			}
		}
	}

})(engine);]]></script>
        <short_description>Application names should not be used as string literals in code</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-04-19 15:52:30</sys_created_on>
        <sys_id>1a49ab04db070950bcced03cd39619fd</sys_id>
        <sys_mod_count>23</sys_mod_count>
        <sys_name>CodeSanity - Application names in code</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_linter_check_1a49ab04db070950bcced03cd39619fd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-22 20:32:30</sys_updated_on>
    </scan_linter_check>
</record_update>

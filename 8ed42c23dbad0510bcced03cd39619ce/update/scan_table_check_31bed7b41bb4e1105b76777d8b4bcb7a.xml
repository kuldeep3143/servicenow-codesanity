<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>true</advanced>
        <category>code_sanity</category>
        <conditions/>
        <description>A scoped application may contain a Script Include named "AppInstall" and this Script Include then must contain a single function of the same name.&#13;
The function is supposed to contain one-time installation activities to be performed AFTER the application is installed (or updated) on an instance. &#13;
The function should NOT call any AppInstall() functions from other application scopes.&#13;
The AppInstall() function must use the x_snc_devtools.InstallerAPI class to perform its operations and return the result of the installer object Finish() method.&#13;
A well-formed AppInstall() function looks like this:&#13;
function AppInstall()&#13;
{	&#13;
	var installer = new x_snc_devtools.InstallerAPI(x_snc_devtools.GetAppName('x_snc_codesanity'));&#13;
	&#13;
	installer.RecordSetValue(&#13;
		'Setting the instance scan timeout to 6 hours',&#13;
		'sysrule_quota','139d8c680f1333006e5140c1df767e86',&#13;
		'max_duration','21600');&#13;
&#13;
	return installer.Finish();&#13;
}</description>
        <documentation_url/>
        <finding_type>scan_finding</finding_type>
        <name>CodeSanity - AppInstall</name>
        <priority>1</priority>
        <resolution_details>If the "AppInstall" Script Include exists but contains a class, refactor the code to a single function: AppInstall().&#13;
If the AppInstall() function calls AppInstall() functions from other scopes (e.g.  from its dependencies) remove such calls. The installation scripts of an application's dependencies is done by using the x_snc_Devtools.InstallApp() function which calls the AppInstall() function of the given scope and of all its required applictions (i.e. its documented dependencies). </resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	if (x_snc_codesanity.IsCheckApplicableToRecord())
	{
		if (current.sys_scope != 'global')
		{
			var grSI = new GlideRecord('sys_script_include');
			grSI.addQuery('api_name','=',current.scope+'.AppInstall');
			grSI.addQuery('sys_scope','=',current.sys_id);
			grSI.query();
			if (grSI.next() != false)
			{
				var strScript = x_snc_devtools.GetStringValue(grSI.script);
				if (strScript.indexOf('.AppInstall(') != -1)
				{
					engine.finding.increment();
				}
				if (x_snc_devtools.StringCheckRegEx(strScript,'return installer.Finish\\(\\);\\s*}\\s*$') != true)
				{
					engine.finding.increment();
				}				
			}
		}
	}

})(engine);]]></script>
        <short_description>The AppInstall Script Include must be implemented properly</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-01 19:06:59</sys_created_on>
        <sys_id>31bed7b41bb4e1105b76777d8b4bcb7a</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>CodeSanity - AppInstall</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_table_check_31bed7b41bb4e1105b76777d8b4bcb7a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-04 08:02:12</sys_updated_on>
        <table>sys_app</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
</record_update>

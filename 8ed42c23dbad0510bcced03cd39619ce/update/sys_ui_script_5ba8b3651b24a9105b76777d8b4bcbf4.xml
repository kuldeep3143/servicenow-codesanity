<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>The function CodeSanityScanRecord() executes a CodeSanity suite scan against the given record and displays a progress dialog. </description>
        <global>true</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_snc_codesanity.CodeSanityScanRecord</name>
        <script><![CDATA[function CodeSanityScanRecord(strRecordTable,strRecordSysId)
{
	var strTitle = 'Code'+'Sanity';
	
	function OnExecutionComplete(dialog,tracker)
	{
		// In case we use the DevTools::InstanceScanSuiteOnRecord populated tracker object
		var strResultSysId = GetStringValue(GetValue(tracker,'result','sys_id'));
		if (IsValidSysId(strResultSysId) == false)
		{
			// In case we use the InstanceScan OOTB populated tracker object
			strResultSysId = GetStringValue(GetValue(tracker,'result','result_id'));
		}
		var buttonViewResults = GetElementById('sysparm_button_view_results');
		if (buttonViewResults)
		{
			if (IsValidSysId(strResultSysId) == true)
			{
				buttonViewResults.on('click', function()
					{
						RedirectToRecord('scan_result',strResultSysId,'',true);
					});
			}
			else
			{
				buttonViewResults.style.display = "none";
			}
		}
	
		var buttonClose = GetElementById('sysparm_button_close');
        if (buttonClose)
		{
            buttonClose.on('click', function()
				{
					dialog.destroy();
				});
        }
	}
	
	function OnExecutionFailed(dialog)
	{
		DoModalMessage(
			strTitle,
			'Starting the CodeSanity Scan failed. Probably another Instance Scan scan is already running.\n\nPlease try again later!',
			function()
			{
				dialog.destroy();
			});
		return;
	}
	
	function OnStatusUpdate(dialog)
	{
		//console.log('OnStatusUpdate');
	}

	if (InstanceScanIsRunning() == true)
	{
		DoModalMessage(
			strTitle,
			'Another Instance Scan scan is already running.\n\nPlease try again later!',
			function()
			{
				dialog.destroy();
			});		
		return;
	}

	DoModalProgress(
		strTitle, // to avoid a false positive finding
		'Scan',
		'x_snc_codesanity.CodeSanityClientAPI',
		{
			record_table: strRecordTable,
			record_sys_id: strRecordSysId
		},
		{
			view_results:
			{
				title: 'View Results'
			},
			close:
			{
				title: 'Close'
			}
		},
		{
			callbackOnExecutionComplete: OnExecutionComplete,
			callbackOnExecutionFailed: OnExecutionFailed,
			callbackOnStatusUpdate: OnStatusUpdate,
		});
}]]></script>
        <script_name>CodeSanityScanRecord</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-22 18:34:09</sys_created_on>
        <sys_id>5ba8b3651b24a9105b76777d8b4bcbf4</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>x_snc_codesanity.CodeSanityScanRecord</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>sys_ui_script_5ba8b3651b24a9105b76777d8b4bcbf4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-22 18:36:07</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
